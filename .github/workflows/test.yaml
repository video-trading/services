name: Test and Build project

on:
  push:

jobs:
  test-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function:  ["authentication", "codeblock"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7.1.5
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: pnpm install
        working-directory: functions/${{ matrix.function }}
      - run: pnpm test
        working-directory: functions/${{ matrix.function }}
  test-services:
    name: "Test Swift Packages"
    runs-on: self-hosted
    strategy:
      matrix:
        app:  ["video/video_upload_service", "video/video_transcode_service"]
    steps:
      - uses: actions/checkout@v3
      - uses: swift-actions/setup-swift@v1
      - name: Up required services
        run: docker-compose up -d
      - name: Test ${{ matrix.app }}
        run: swift test
        working-directory: services/${{ matrix.app }}
      - run: docker-compose down
  docker-service:
    name: Build dockerized services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:  ["video/video_upload_service", "video/video_transcode_service"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.app }}
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/services/service.dockerfile
          platforms: linux/amd64
          push: false
          tags: ghcr.io/${{ github.repository }}/${{ matrix.app }}:latest
          build-args: |
            APP_NAME=${{ matrix.app }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ (github.event.pusher.name != 'github action') && (github.ref == 'refs/heads/main') }}
    needs: 
      - test-services
      - docker-service
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          branch: main